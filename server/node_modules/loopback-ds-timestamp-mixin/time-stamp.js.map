{"version":3,"sources":["time-stamp.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;AACA,IAAM,QAAQ,sBAAd;AACA,IAAM,OAAO,SAAP,IAAO,CAAC,OAAD,EAAU,OAAV,EAAsB;AACjC,MAAI,CAAC,QAAQ,eAAb,EAA8B;AAC5B,YAAQ,IAAR,CAAa,OAAb;AACD;AACF,CAJD;;kBAMe,UAAC,KAAD,EAA6B;AAAA,MAArB,WAAqB,yDAAP,EAAO;;AAC1C,QAAM,8BAAN,EAAsC,MAAM,SAA5C;;AAEA,MAAM,UAAU,SAAc;AAC5B,eAAW,WADiB;AAE5B,eAAW,WAFiB;AAG5B,cAAU,IAHkB;AAI5B,oBAAgB,KAJY,E;AAK5B,qBAAiB;AALW,GAAd,EAMb,WANa,CAAhB;;AAQA,QAAM,SAAN,EAAiB,OAAjB;;AAEA,MAAI,CAAC,QAAQ,cAAT,IAA2B,MAAM,QAAN,CAAe,cAA9C,EAA8D;AAC5D,UAAM,QAAN,CAAe,cAAf,GAAgC,KAAhC;AACA,SAAK,OAAL,EAAiB,MAAM,eAAvB;AACD;;AAED,MAAI,MAAM,QAAN,CAAe,cAAf,IAAiC,QAAQ,QAA7C,EAAuD;AACrD,SAAK,OAAL,mBAA6B,MAAM,eAAnC;AAED;;AAED,QAAM,cAAN,CAAqB,QAAQ,SAA7B,EAAwC;AACtC,UAAM,IADgC;AAEtC,cAAU,QAAQ,QAFoB;AAGtC,eAAW;AAH2B,GAAxC;;AAMA,QAAM,cAAN,CAAqB,QAAQ,SAA7B,EAAwC;AACtC,UAAM,IADgC;AAEtC,cAAU,QAAQ;AAFoB,GAAxC;;AAKA,QAAM,OAAN,CAAc,aAAd,EAA6B,UAAC,GAAD,EAAM,IAAN,EAAe;AAC1C,UAAM,aAAN,EAAqB,IAAI,OAAzB;AACA,QAAI,IAAI,OAAJ,IAAe,IAAI,OAAJ,CAAY,aAA/B,EAA8C;AAAE,aAAO,MAAP;AAAgB;AAChE,QAAI,IAAI,QAAR,EAAkB;AAChB,YAAM,uBAAN,EAA+B,IAAI,KAAJ,CAAU,SAAzC,EAAoD,QAAQ,SAA5D,EAAuE,IAAI,QAAJ,CAAa,EAApF;AACA,UAAI,QAAJ,CAAa,QAAQ,SAArB,IAAkC,IAAI,IAAJ,EAAlC;AACD,KAHD,MAGO;AACL,YAAM,iCAAN,EACM,IAAI,KAAJ,CAAU,eADhB,EACiC,QAAQ,SADzC,EACoD,IAAI,KADxD;AAEA,UAAI,IAAJ,CAAS,QAAQ,SAAjB,IAA8B,IAAI,IAAJ,EAA9B;AACD;AACD,WAAO,MAAP;AACD,GAZD;AAaD,C;;AAED,OAAO,OAAP,GAAiB,QAAQ,OAAzB","file":"time-stamp.js","sourcesContent":["import _debug from './debug';\nconst debug = _debug();\nconst warn = (options, message) => {\n  if (!options.silenceWarnings) {\n    console.warn(message);\n  }\n};\n\nexport default (Model, bootOptions = {}) => {\n  debug('TimeStamp mixin for Model %s', Model.modelName);\n\n  const options = Object.assign({\n    createdAt: 'createdAt',\n    updatedAt: 'updatedAt',\n    required: true,\n    validateUpsert: false, // default to turning validation off\n    silenceWarnings: false,\n  }, bootOptions);\n\n  debug('options', options);\n\n  if (!options.validateUpsert && Model.settings.validateUpsert) {\n    Model.settings.validateUpsert = false;\n    warn(options, `${Model.pluralModelName} settings.validateUpsert was overriden to false`);\n  }\n\n  if (Model.settings.validateUpsert && options.required) {\n    warn(options, `Upserts for ${Model.pluralModelName} will fail when\n          validation is turned on and time stamps are required`);\n  }\n\n  Model.defineProperty(options.createdAt, {\n    type: Date,\n    required: options.required,\n    defaultFn: 'now',\n  });\n\n  Model.defineProperty(options.updatedAt, {\n    type: Date,\n    required: options.required,\n  });\n\n  Model.observe('before save', (ctx, next) => {\n    debug('ctx.options', ctx.options);\n    if (ctx.options && ctx.options.skipUpdatedAt) { return next(); }\n    if (ctx.instance) {\n      debug('%s.%s before save: %s', ctx.Model.modelName, options.updatedAt, ctx.instance.id);\n      ctx.instance[options.updatedAt] = new Date();\n    } else {\n      debug('%s.%s before update matching %j',\n            ctx.Model.pluralModelName, options.updatedAt, ctx.where);\n      ctx.data[options.updatedAt] = new Date();\n    }\n    return next();\n  });\n};\n\nmodule.exports = exports.default;\n"],"sourceRoot":"/Users/clarkbw/src/pi/loopback-ds-timestamp-mixin/es6"}